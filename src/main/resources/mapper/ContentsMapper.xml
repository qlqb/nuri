<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart.ks48team01.mapper.ContentsMapper">

    <resultMap id="contentsResultMap" type="Contents">
        <id property="contentsId" column="CONTENTS_ID"/>
        <result property="contentsCategoryCode" column="CONTENTS_CAT_CODE"/>
        <result property="regionCode" column="REGION_CODE"/>
        <result property="storeId" column="STORE_ID"/>
        <result property="contentsCategoryName" column="CONTENTS_CAT_NAME"/>
        <result property="contentsName" column="CONTENTS_NAME"/>
        <result property="contentsAddress" column="CONTENT_ADDRESS"/>
        <result property="contentsDuration" column="CONTENTS_DURATION"/>
        <result property="contentsPg" column="CONTENTS_PG"/>
        <result property="contentsPrice" column="CONTENTS_PRICE"/>
        <result property="contentsReleaseTime" column="CONTENTS_RELEASE_TIME"/>
        <result property="contentsRegDate" column="CONTENTS_REG_DATE"/>
        <result property="contentsSellStartDate" column="CONTENTS_SELL_START_DATE"/>
        <result property="contentsSellEndDate" column="CONTENTS_SELL_END_DATE"/>
        <result property="amountContentRegistered" column="AMOUNT_CONTENT_REGISTERED"/>
        <result property="amountContentRemaining" column="AMOUNT_CONTENT_REMAINING"/>
        <result property="contentsDetail" column="CONTENTS_DETAIL"/>
        <association property="storeInfo" javaType="Store">
            <id property="storeId" column="STORE_ID"/>
            <result property="userId" column="USER_ID"/>
            <result property="storeCategoryCode" column="STORE_CATEGORY_CODE"/>
            <result property="districtCode" column="DISTRICT_CODE"/>
            <result property="storeCategoryName" column="STORE_CATEGORY_NAME"/>
            <result property="businessNumber" column="BUSINESS_NUMBER"/>
            <result property="corporationNumber" column="CORPORATION_NUMBER"/>
            <result property="storeName" column="STORE_NAME"/>
            <result property="storeContact" column="STORE_CONTACT"/>
            <result property="storeAddress" column="STORE_ADDRESS"/>
            <result property="openingTime" column="OPENING_TIME"/>
            <result property="storeRegDate" column="STORE_REG_DATE"/>
        </association>
    </resultMap>

    <resultMap id="contentsCategoryResultMap" type="ContentsCategory">
        <id property="contentsCategoryCode" column="CONTENTS_CAT_CODE"/>
        <result property="storeCategoryCode" column="STORE_CATEGORY_CODE"/>
        <result property="contentsCategoryName" column="CONTENTS_CAT_NAME"/>
    </resultMap>

    <resultMap id="contentsFileResultMap" type="ContentsFile">
        <id property="fileCode" column="FILE_CODE"/>
        <result property="contentsId" column="CONTENTS_ID"/>
        <result property="userId" column="USER_ID"/>
        <result property="fileName" column="FILE_NAME"/>
        <result property="fileSize" column="FILE_SIZE"/>
        <result property="fileExt" column="FILE_EXT"/>
        <result property="fileDate" column="FILE_DATE"/>
        <result property="filePath" column="FILE_PATH"/>
    </resultMap>

    <select id="getContentsInfoList" resultType="map" parameterType="int">
        /* 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            IFNULL(CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_SELL_END_DATE), 0) AS contentsSellDuration,
            IF(si.STORE_CATEGORY_NAME = '도서', 'book',
                IF(si.STORE_CATEGORY_NAME = '체육', 'exercise',
                    IF(c.CONTENTS_PG=0, '전체', CONCAT(c.CONTENTS_PG, '세 이상')))) AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentsRemaining
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsInfoListByTabValue" resultType="map" parameterType="String">
        /* 탭 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            c.CONTENTS_SELL_START_DATE AS contentsSellStartDate,
            c.CONTENTS_SELL_END_DATE AS contentsSellEndDate,
            si.STORE_CATEGORY_NAME AS contentsCategoryName,
            c.CONTENTS_PG AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentRemaining,

            cf.FILE_PATH AS filePath,
            cf.FILE_NAME AS fileName
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
            INNER JOIN
            CONTENTS_FILE AS cf
            ON
            c.CONTENTS_ID = cf.CONTENTS_ID
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__')
            </if>
        </where>
        ORDER BY c.CONTENTS_REG_DATE
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsInfoListByTabValueAndSearch" resultType="map" parameterType="String">
        /* 탭과 검색 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            c.CONTENTS_SELL_START_DATE AS contentsSellStartDate,
            c.CONTENTS_SELL_END_DATE AS contentsSellEndDate,
            si.STORE_CATEGORY_NAME AS contentsCategoryName,
            c.CONTENTS_PG AS contentsPg,
            CONCAT(FORMAT(c.CONTENTS_PRICE, 0), '원') AS contentsPrice,

            si.STORE_NAME AS storeName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentRemaining,

            cf.FILE_PATH AS filePath,
            cf.FILE_NAME AS fileName
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            si.STORE_ID=c.STORE_ID
            INNER JOIN
            CONTENTS_FILE AS cf
            ON
            c.CONTENTS_ID = cf.CONTENTS_ID
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__')
            </if>
            <if test="performanceGenre != 'allGenre'">
                AND c.CONTENTS_CAT_CODE = #{performanceGenre}
            </if>
        </where>
        ORDER BY c.CONTENTS_REG_DATE DESC
        <if test="startContentsNum > -1">
            LIMIT #{startContentsNum}, #{contentsPerPage};
        </if>
    </select>

    <select id="getContentsByTabCnt" resultType="int" parameterType="String">
        /* 각 탭의 컨텐츠 개수 */
        SELECT
        COUNT(1)
        FROM
        CONTENTS AS c
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__');
            </if>
        </where>
    </select>

    <select id="getContentsByTabAndSearchCnt" resultType="int" parameterType="String">
        /* 각 탭의 서칭 결과 컨텐츠 개수 */
        SELECT
            COUNT(1)
        FROM
            CONTENTS AS c
            INNER JOIN
            CONTENTS_FILE AS cf
            ON
            c.CONTENTS_ID = cf.CONTENTS_ID
        <where>
            <if test="tabValue != 'all'">
                c.CONTENTS_CAT_CODE LIKE CONCAT(#{tabValue}, '__');
            </if>
            <if test="performanceGenre != 'allGenre'">
                AND c.CONTENTS_CAT_CODE = #{performanceGenre}
            </if>
        </where>
    </select>

    <select id="getStoreCategory" resultType="StoreCategory">
        SELECT
            sc.STORE_CATEGORY_NAME AS storeCategoryName,
            sc.STORE_CATEGORY_CODE AS storeCategoryCode
        FROM
            STORE_CATEGORY AS sc;
    </select>

    <select id="getContentsCategory" resultType="ContentsCategory" parameterType="String">
        SELECT
            cc.CONTENTS_CAT_NAME AS contentsCategoryName,
            cc.CONTENTS_CAT_CODE AS contentsCategoryCode,
            cc.STORE_CATEGORY_CODE AS storeCategoryCode
        FROM
            CONTENT_CATEGORY AS cc
        WHERE
            cc.STORE_CATEGORY_CODE = #{tabValue} AND
            NOT cc.CONTENTS_CAT_NAME='공연';
    </select>

    <select id="getContentsCategoryOnReg" parameterType="String" resultMap="contentsCategoryResultMap">
        SELECT
            cc.CONTENTS_CAT_NAME,
            cc.CONTENTS_CAT_CODE,
            cc.STORE_CATEGORY_CODE
        FROM
            CONTENT_CATEGORY AS cc
        WHERE
            cc.STORE_CATEGORY_CODE = #{storeCategoryCode} AND
            NOT cc.CONTENTS_CAT_CODE LIKE '___00'
    </select>

    <insert id="addContents" parameterType="Contents">
        <selectKey keyProperty="contentsId" order="BEFORE" resultType="String">
            /* 컨텐츠아이디 자동증가 */
            SELECT
                (CASE
                WHEN COUNT(c.CONTENTS_ID) = 0
                THEN CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d'), '0001')
                WHEN (MAX(CAST(SUBSTRING(c.CONTENTS_ID, 12) AS UNSIGNED))+1) > 999
                THEN CONCAT(CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d')), MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED))+1)
                ELSE
                CONCAT(CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d')), LPAD(MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED))+1, 4, '0'))
                END) AS contentsId
            FROM
                CONTENTS AS c
            WHERE
                c.CONTENTS_ID LIKE CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d'), '%');
        </selectKey>
        INSERT INTO CONTENTS(CONTENTS_ID, CONTENTS_CAT_CODE, REGION_CODE, STORE_ID, CONTENTS_CAT_NAME,
        CONTENTS_NAME, CONTENT_ADDRESS, CONTENTS_DURATION, CONTENTS_PG, CONTENTS_PRICE, CONTENTS_RELEASE_TIME,
        CONTENTS_REG_DATE, CONTENTS_SELL_START_DATE, CONTENTS_SELL_END_DATE,
        AMOUNT_CONTENT_REGISTERED, AMOUNT_CONTENT_REMAINING, CONTENTS_DETAIL)

        VALUES(#{contentsId}, #{contentsCategoryCode}, #{regionCode}, #{storeId}, #{contentsCategoryName},
        #{contentsName}, #{contentsAddress}, #{contentsDuration}, #{contentsPg}, #{contentsPrice},
        #{contentsReleaseTime}, CURDATE(), #{contentsSellStartDate},
        #{contentsSellEndDate}, #{amountContentRegistered}, #{amountContentRemaining},
        #{contentsDetail})
    </insert>
    
    <select id="getContentsDetailInfo" resultType="map" parameterType="String">
        /* 컨텐츠 상세정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            IFNULL(c.CONTENTS_RELEASE_TIME, "0") AS contentsReleaseTime,
            c.CONTENTS_CAT_CODE AS contentsCategoryCode,
            IF(c.CONTENTS_SELL_END_DATE != '9999-12-31', CONCAT(c.CONTENTS_SELL_START_DATE, '~', c.CONTENTS_SELL_END_DATE), CONCAT(c.CONTENTS_SELL_START_DATE, '~')) AS contentsSellDuration,
            c.CONTENTS_SELL_START_DATE AS contentsSellStartDate,
            c.CONTENTS_SELL_END_DATE AS contentsSellEndDate,
            c.CONTENT_ADDRESS AS contentsAddress,
            CONCAT(c.CONTENTS_DURATION, '분') AS contentsDuration,
            c.CONTENTS_PG AS contentsPg,
            c.CONTENTS_PRICE AS contentsPrice,
            si.STORE_CONTACT AS storeContact,
            c.CONTENTS_DETAIL AS contentsDetail,
            si.STORE_CONTACT AS storeContact,
            cf.FILE_NAME AS fileName,
            cf.FILE_PATH AS filePath
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO si
            ON
            c.STORE_ID = si.STORE_ID
            INNER JOIN
            CONTENTS_FILE AS cf
            ON
            cf.CONTENTS_ID = c.CONTENTS_ID
        WHERE
            c.CONTENTS_ID = #{contentsId};
    </select>

    <select id="getSessionStoreInfo" resultType="Store" parameterType="String">
        SELECT
            si.STORE_ID AS storeId,
            si.STORE_NAME AS storeName,
            si.USER_ID AS userId
        FROM
            USER_INFO AS u
            INNER JOIN
            STORE_INFO AS si
            ON
            u.USER_ID = si.USER_ID
        WHERE
            u.USER_ID = #{userId};
    </select>

    <select id="getContentsInfoByContentsId" resultMap="contentsResultMap" parameterType="String">
        /* 컨텐츠 업데이트 시 컨텐츠의 기존 정보를 요청함 */
        SELECT
            c.CONTENTS_ID,
            c.CONTENTS_CAT_CODE,
            c.REGION_CODE,
            c.STORE_ID,
            c.CONTENTS_CAT_NAME,
            c.CONTENTS_NAME,
            c.CONTENT_ADDRESS,
            c.CONTENTS_DURATION,
            c.CONTENTS_DURATION,
            c.CONTENTS_PG,
            c.CONTENTS_PRICE,
            c.CONTENTS_RELEASE_TIME,
            c.CONTENTS_REG_DATE,
            c.CONTENTS_SELL_START_DATE,
            c.CONTENTS_SELL_END_DATE,
            c.AMOUNT_CONTENT_REGISTERED,
            c.AMOUNT_CONTENT_REMAINING,
            c.CONTENTS_DETAIL
        FROM
            CONTENTS AS c
        WHERE
            c.CONTENTS_ID = #{contentsId};
    </select>

    <select id="getContentsInfoByUserId" resultType="Map" parameterType="String">
        /* 가맹점별 컨텐츠 정보 */
        SELECT
            c.CONTENTS_ID AS contentsId,
            c.CONTENTS_NAME AS contentsName,
            c.CONTENTS_CAT_CODE AS contentsCategoryCode,
            c.CONTENTS_CAT_NAME AS contentsCategoryName,
            c.CONTENTS_PRICE AS contentsPrice,
            c.CONTENTS_SELL_START_DATE AS contentsSellStartDate,
            c.CONTENTS_SELL_END_DATE AS contentsSellEndDate,
            cc_new.CONTENTS_CAT_NAME AS storeCategoryName,
            c.AMOUNT_CONTENT_REMAINING AS amountContentRemaining,
            cf.FILE_PATH AS filePath,
            cf.FILE_NAME AS fileName
        FROM
            USER_INFO AS ui
            INNER JOIN
            STORE_INFO AS si
            ON
            ui.USER_ID = si.USER_ID
            INNER JOIN
            CONTENTS AS c
            ON
            c.STORE_ID = si.STORE_ID
            INNER JOIN
            CONTENT_CATEGORY AS cc
            ON
            cc.CONTENTS_CAT_CODE = c.CONTENTS_CAT_CODE
            LEFT JOIN
            CONTENT_CATEGORY AS cc_new
            ON
            cc_new.CONTENTS_CAT_CODE = CONCAT(SUBSTRING(cc.CONTENTS_CAT_CODE, 1, 3), '00')
            INNER JOIN
            CONTENTS_FILE AS cf
            ON
            cf.CONTENTS_ID = c.CONTENTS_ID
        WHERE
            ui.USER_ID = #{userId}
        ORDER BY CONTENTS_REG_DATE DESC;
    </select>

    <select id="getAjaxContentsCategory" resultType="ContentsCategory" parameterType="String">
        /* 대분류 선택시 ajax로 호출로 화면에 보내질 소분류 정보 */
        SELECT
            c.CONTENTS_CAT_CODE AS contentsCategoryCode,
            c.STORE_CATEGORY_CODE AS storeCategoryCode,
            c.CONTENTS_CAT_NAME AS contentsCategoryName
        FROM
            CONTENT_CATEGORY AS c
        WHERE
            c.STORE_CATEGORY_CODE = #{storeCategoryCode};
    </select>

    <select id="getAdminContentsList" resultMap="contentsResultMap">
        SELECT
            c.CONTENTS_ID,
            c.CONTENTS_CAT_CODE,
            c.REGION_CODE,
            c.STORE_ID,
            c.CONTENTS_CAT_NAME,
            c.CONTENTS_NAME,
            c.CONTENT_ADDRESS,
            c.CONTENTS_DURATION,
            c.CONTENTS_PG,
            c.CONTENTS_PRICE,
            IFNULL(c.CONTENTS_RELEASE_TIME, "0") AS CONTENTS_RELEASE_TIME,
            c.CONTENTS_REG_DATE,
            c.CONTENTS_SELL_START_DATE,
            c.CONTENTS_SELL_END_DATE,
            c.AMOUNT_CONTENT_REGISTERED,
            c.AMOUNT_CONTENT_REMAINING,
            c.CONTENTS_DETAIL,
            si.STORE_CATEGORY_NAME,
            si.STORE_NAME
        FROM
            CONTENTS AS c
            INNER JOIN
            STORE_INFO AS si
            ON
            c.STORE_ID = si.STORE_ID
    </select>

    <update id="modifyContents" parameterType="Contents">
        UPDATE CONTENTS
        <set>
            <if test="contentsCategoryCode != null and contentsCategoryCode != ''">
                CONTENTS_CAT_CODE = #{contentsCategoryCode},
            </if>
            <if test="regionCode != null and regionCode != ''">
                REGION_CODE = #{regionCode},
            </if>
            <if test="contentsCategoryName != null and contentsCategoryName != ''">
                CONTENTS_CAT_NAME = #{contentsCategoryName},
            </if>
            <if test="contentsName != null and contentsName != ''">
                CONTENTS_NAME = #{contentsName},
            </if>
            <if test="contentsAddress != null and contentsAddress != ''">
                CONTENT_ADDRESS = #{contentsAddress},
            </if>
            <if test="contentsDuration != null and contentsDuration != ''">
                CONTENTS_DURATION = #{contentsDuration},
            </if>
            <if test="contentsPg != null and contentsPg != ''">
                CONTENTS_PG = #{contentsPg},
            </if>
            <if test="contentsPrice != null and contentsPrice != ''">
                CONTENTS_PRICE = #{contentsPrice},
            </if>
            <if test="contentsReleaseTime != null and contentsReleaseTime != ''">
                CONTENTS_RELEASE_TIME = #{contentsReleaseTime},
            </if>
            <if test="contentsRegDate != null and contentsRegDate != ''">
                CONTENTS_REG_DATE = CURDATE(),
            </if>
            <if test="contentsSellStartDate != null and contentsSellStartDate != ''">
                CONTENTS_SELL_START_DATE = #{contentsSellStartDate},
            </if>
            <if test="contentsSellEndDate != null and contentsSellEndDate != ''">
                CONTENTS_SELL_END_DATE = #{contentsSellEndDate},
            </if>
            <if test="amountContentRegistered != null and amountContentRegistered != ''">
                AMOUNT_CONTENT_REGISTERED = #{amountContentRegistered},
            </if>
            <if test="amountContentRemaining > -10000">
                AMOUNT_CONTENT_REMAINING = #{amountContentRemaining},
            </if>
            <if test="contentsDetail != null and contentsDetail != ''">
                CONTENTS_DETAIL = #{contentsDetail}
            </if>
        </set>
        WHERE CONTENTS_ID = #{contentsId};
    </update>

    <insert id="addFile" parameterType="ContentsFile">
        /* 파일 추가 */
        INSERT INTO CONTENTS_FILE
        (
            FILE_CODE,
            CONTENTS_ID,
            USER_ID,
            FILE_NAME,
            FILE_SIZE,
            FILE_EXT,
            FILE_DATE,
            FILE_PATH
        )VALUES (
            #{fileCode},
            #{contentsId},
            #{userId},
            #{fileName},
            #{fileSize},
            #{fileExt},
            CURDATE(),
            #{filePath}
        )
    </insert>

    <update id="updateFile" parameterType="ContentsFile">
        UPDATE CONTENTS_FILE
        <set>
            <if test="fileName != null and fileName != ''">
                FILE_NAME = #{fileName},
            </if>
            <if test="fileSize != null and fileSize != ''">
                FILE_SIZE = #{fileSize},
            </if>
            <if test="fileExt != null and fileExt != ''">
                FILE_EXT = #{fileExt},
            </if>
            <if test="filePath != null and filePath != ''">
                FILE_PATH = #{filePath},
            </if>
            <if test="fileDate != null and fileDate != ''">
                FILE_DATE = CURDATE(),
            </if>
        </set>
        WHERE CONTENTS_ID = #{contentsId};
    </update>

    <select id="getContentsIdForFileAdd" resultType="String" parameterType="String">
        /* 파일과 함께 컨텐츠가 추가 될 때 생성 된 컨텐츠 아이디를 파일 테이블에 추가하기 위해 contentsId를 가져옴 */
        SELECT
            CONCAT(CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d')), LPAD(MAX(CAST(SUBSTRING(CONTENTS_ID, 12) AS UNSIGNED)), 4, '0')) AS contentsId
        FROM
            CONTENTS AS c
        WHERE
            c.CONTENTS_ID LIKE CONCAT('CNT', DATE_FORMAT(CURDATE(), '%Y%m%d'), '%') AND
            c.STORE_ID = #{storeId};
    </select>

    <select id="getFileList" resultMap="contentsFileResultMap">
        SELECT
            cf.FILE_CODE,
            cf.CONTENTS_ID,
            cf.USER_ID,
            cf.FILE_NAME,
            cf.FILE_SIZE,
            cf.FILE_EXT,
            cf.FILE_DATE,
            cf.FILE_PATH
        FROM
            CONTENTS_FILE AS cf
    </select>

    <delete id="deleteContentsFile" parameterType="String">
        DELETE FROM CONTENTS_FILE WHERE CONTENTS_ID=#{contentsId};
    </delete>

    <delete id="deleteContents" parameterType="String">
        DELETE FROM CONTENTS WHERE CONTENTS_ID=#{contentsId};
    </delete>
</mapper>